<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Michael&#39;s Blog</title>
    <link>https://michael-jalloh.github.io/posts/</link>
    <description>Recent content in Posts on Michael&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Jan 2022 13:32:09 +0000</lastBuildDate><atom:link href="https://michael-jalloh.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Telegram Bot App With Flask</title>
      <link>https://michael-jalloh.github.io/posts/telegram-bot-app-with-flask/</link>
      <pubDate>Tue, 18 Jan 2022 13:32:09 +0000</pubDate>
      
      <guid>https://michael-jalloh.github.io/posts/telegram-bot-app-with-flask/</guid>
      <description>Telegram bots are great. Bots can provide an avenue for businesses to provide customer services 24/7 on their favorite chat app (Telegram, Whatsapp, Messenger, etc). Bots can handle customer services from handling food orders to declining lost credit cards.
There are different ways to handle logic, from rule-based systems to AI-powered bots. With AI bots we don&amp;rsquo;t have to specify strict rules or use if and else statements a lot, but another problem is that with AI Bots we need data to train our bot.</description>
    </item>
    
    <item>
      <title>Raspberry Pi Network Discovery</title>
      <link>https://michael-jalloh.github.io/posts/raspberry_pi_network_discovery/</link>
      <pubDate>Sat, 15 Jan 2022 02:07:58 +0000</pubDate>
      
      <guid>https://michael-jalloh.github.io/posts/raspberry_pi_network_discovery/</guid>
      <description>In this post we will be configuring the raspberry pi to start up a script we created when it boots, this is more of a reminder for me for when I will want to do it again in the future.
Now we will be launching a python script, what the script does is that it starts up UDP server that sits and waits for a client to send a specific message, If it receives that message it will give back a reply and then exit, or else it will ignore the message and then go back to waiting for another message.</description>
    </item>
    
  </channel>
</rss>
